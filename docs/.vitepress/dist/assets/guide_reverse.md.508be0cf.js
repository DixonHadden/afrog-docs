import{_ as e,o as a,c as o,R as s}from"./chunks/framework.b9b78f26.js";const f=JSON.parse('{"title":"Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"guide/reverse.md","filePath":"guide/reverse.md"}'),n={name:"guide/reverse.md"},t=s(`<h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h1><p>The first time you start afrog, it will automatically create a configuration file called <code>afrog-config.yaml</code>, which will be saved in the current user directory under <code>$HOME/.config/afrog/afrog-config.yaml</code>.</p><h2 id="rerverse" tabindex="-1">Rerverse <a class="header-anchor" href="#rerverse" aria-label="Permalink to &quot;Rerverse&quot;">​</a></h2><p>Here is an example config file:</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">reverse</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">ceye</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">api-key</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">domain</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">xxxxxx.ceye.io</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p><code>reverse</code> is a reverse connection platform used to verify command execution vulnerabilities that cannot be echoed back. Currently, only ceye can be used for verification. To obtain ceye, follow these steps:</p><ul><li>Go to the ceye.io website and register an account.</li><li>Log in and go to the personal settings page.</li><li>Copy the <code>domain</code> and <code>api-key</code> and correctly configure them in the <code>afrog-config.yaml</code> file.</li></ul>`,7),r=[t];function l(c,i,p,d,x,y){return a(),o("div",null,r)}const h=e(n,[["render",l]]);export{f as __pageData,h as default};
